{
  "openapi": "3.0.0",
  "components": {
    "schemas": {
      "Id": {
        "type": "string",
        "minLength": 24,
        "maxLength": 24,
        "pattern": "^\\d{24}$"
      },
      "Chapter": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string",
            "format": "uri"
          },
          "isRead": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Manga": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "user": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string",
            "format": "uri"
          },
          "site": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chapter"
            }
          },
          "newChapCount": {
            "type": "integer"
          },
          "unreadChapCount": {
            "type": "integer"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "minimum": 0,
            "maximum": 3
          },
          "statusString": {
            "type": "string",
            "enum": [
              "finished",
              "last chap reached",
              "many to read",
              "new chap"
            ]
          },
          "shelf": {
            "type": "string",
            "enum": [
              "to read",
              "reading",
              "waiting",
              "dropped",
              "finished"
            ]
          },
          "note": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "user": {
            "$ref": "#/components/schemas/Id"
          },
          "browser": {
            "type": "string",
            "enum": [
              "Opera",
              "Internet Explorer",
              "Chrome",
              "Firefox",
              "Safari",
              "Unknown"
            ]
          },
          "os": {
            "type": "string",
            "enum": [
              "Windows",
              "MacOS",
              "Linux",
              "Android",
              "iOS",
              "Unknown"
            ]
          },
          "endpoint": {
            "type": "string",
            "format": "uri"
          },
          "auth": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "googleId": {
            "type": "string"
          },
          "googlePic": {
            "type": "string",
            "format": "uri"
          },
          "googleName": {
            "type": "string"
          },
          "facebookId": {
            "type": "string"
          },
          "facebookPic": {
            "type": "string",
            "format": "uri"
          },
          "facebookName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "info": {
    "title": "MangaBookmark API",
    "version": "3.0.0-a1",
    "description": "API for MangaBookmark client"
  },
  "paths": {
    "/api/auth/logout": {
      "post": {
        "description": "Log out of the application",
        "responses": {
          "302": {
            "description": "logged out"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "Log in to the application",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "incorrect username/password"
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "description": "Log in using Google. See [this](https://developers.google.com/identity/protocols/oauth2)",
        "responses": {
          "302": {
            "description": "Redirect to Google login page"
          }
        }
      }
    },
    "/api/auth/google/callback": {
      "get": {
        "description": "Google login callback. See [this](https://developers.google.com/identity/protocols/oauth2)",
        "responses": {
          "302": {
            "description": "Logged in successfully. Redirect home."
          }
        }
      }
    },
    "/api/auth/facebook": {
      "get": {
        "description": "Log in using Facebook. See [this](https://developers.facebook.com/docs/facebook-login/)",
        "responses": {
          "302": {
            "description": "Redirect to Facebook login page"
          }
        }
      }
    },
    "/api/auth/facebook/callback": {
      "get": {
        "description": "Facebook login callback. See [this](https://developers.facebook.com/docs/facebook-login/)",
        "responses": {
          "302": {
            "description": "Logged in successfully. Redirect home."
          }
        }
      }
    },
    "/api/mangas": {
      "get": {
        "description": "Search & filter mangas",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "Search mangas by name",
            "schema": {
              "type": "string",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "shelf",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "to read",
                  "reading",
                  "waiting",
                  "dropped",
                  "finished"
                ]
              },
              "required": false
            }
          },
          {
            "in": "query",
            "name": "isCompleted",
            "schema": {
              "type": "boolean",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 3
              },
              "required": false
            }
          },
          {
            "in": "query",
            "name": "hidden",
            "schema": {
              "type": "boolean",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "site",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "required": false
            }
          },
          {
            "in": "query",
            "name": "createdAtGTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "createdAtLTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "lastReleasedGTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "lastReleasedLTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "unreadChapCountGTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "unreadChapCountLTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "required": false
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "If set to 0, all pages are retrieved.",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The field name to sort. Add - to sort desc. This field can be a string of one filed a string of multiple fields separated by space, or an array of string.",
              "required": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Manga"
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "totalItem": {
                      "type": "integer"
                    },
                    "totalPage": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new manga",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "link": {
                    "type": "string",
                    "format": "uri"
                  },
                  "readChapters": {
                    "type": "array",
                    "required": false,
                    "items": {
                      "type": "string",
                      "format": "url"
                    }
                  },
                  "note": {
                    "type": "string",
                    "required": false
                  },
                  "isCompleted": {
                    "type": "boolean",
                    "required": false
                  },
                  "hidden": {
                    "type": "boolean",
                    "required": false
                  },
                  "shelf": {
                    "type": "string",
                    "enum": [
                      "to read",
                      "reading",
                      "waiting",
                      "dropped",
                      "finished"
                    ],
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Manga created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manga"
                }
              }
            }
          }
        }
      }
    },
    "/api/mangas/{:mangaId}": {
      "patch": {
        "description": "Create new manga",
        "parameters": [
          {
            "in": "path",
            "name": "mangaId",
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "type": "string",
                    "required": false
                  },
                  "isCompleted": {
                    "type": "boolean",
                    "required": false
                  },
                  "hidden": {
                    "type": "boolean",
                    "required": false
                  },
                  "shelf": {
                    "type": "string",
                    "enum": [
                      "to read",
                      "reading",
                      "waiting",
                      "dropped",
                      "finished"
                    ],
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Manga edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manga"
                }
              }
            }
          }
        }
      }
    },
    "/api/mangas/{mangaId}": {
      "delete": {
        "description": "Delete manga",
        "parameters": [
          {
            "in": "path",
            "name": "mangaId",
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted successfully"
          }
        }
      }
    },
    "/api/mangas/info": {
      "get": {
        "description": "Get live manga info. This manga might NOT be in the database.",
        "parameters": [
          {
            "in": "query",
            "name": "link",
            "schema": {
              "type": "string",
              "format": "uri",
              "required": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get info successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string",
                      "format": "uri"
                    },
                    "image": {
                      "type": "string",
                      "format": "uri"
                    },
                    "isCompleted": {
                      "type": "boolean"
                    },
                    "chapters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/mangas/{mangaId}/mark-chapters": {
      "patch": {
        "description": "Update chapter isRead status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isRead": {
                    "type": "boolean",
                    "required": true
                  },
                  "chapters": {
                    "type": "array",
                    "required": true,
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Chapters marked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manga"
                }
              }
            }
          }
        }
      }
    },
    "/api/mangas/{mangaId}/update": {
      "post": {
        "description": "Update this manga",
        "parameters": [
          {
            "in": "path",
            "name": "mangaId",
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manga"
                }
              }
            }
          }
        }
      }
    },
    "/api/mangas/update-multiple": {
      "get": {
        "description": "Update mangas found by search & filters",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "Search mangas by name",
            "schema": {
              "type": "string",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "shelf",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "to read",
                  "reading",
                  "waiting",
                  "dropped",
                  "finished"
                ]
              },
              "required": false
            }
          },
          {
            "in": "query",
            "name": "isCompleted",
            "schema": {
              "type": "boolean",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "maximum": 3
              },
              "required": false
            }
          },
          {
            "in": "query",
            "name": "hidden",
            "schema": {
              "type": "boolean",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "site",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "required": false
            }
          },
          {
            "in": "query",
            "name": "createdAtGTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "createdAtLTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "lastReleasedGTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "lastReleasedLTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "unreadChapCountGTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "unreadChapCountLTE",
            "schema": {
              "type": "string",
              "format": "date",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "required": false
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "If set to 0, all pages are retrieved.",
              "required": false
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The field name to sort. Add - to sort desc. This field can be a string of one filed a string of multiple fields separated by space, or an array of string.",
              "required": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Manga"
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "totalItem": {
                      "type": "integer"
                    },
                    "totalPage": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/mangas/supported-sites": {
      "get": {
        "description": "Get all supported manga sites",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions": {
      "get": {
        "description": "Get all subscriptions of the current user",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Subscribe this browser for web push notifications",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "browser": {
                    "type": "string",
                    "enum": [
                      "Opera",
                      "Internet Explorer",
                      "Chrome",
                      "Firefox",
                      "Safari",
                      "Unknown"
                    ]
                  },
                  "os": {
                    "type": "string",
                    "enum": [
                      "Windows",
                      "MacOS",
                      "Linux",
                      "Android",
                      "iOS",
                      "Unknown"
                    ]
                  },
                  "endpoint": {
                    "type": "string",
                    "format": "uri"
                  },
                  "auth": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          }
        }
      }
    },
    "/api/subscriptions/{subId}": {
      "delete": {
        "description": "Unsubscribe this browser from web push notifications",
        "parameters": [
          {
            "in": "path",
            "name": "subId",
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted successfully"
          }
        }
      }
    },
    "/api/user": {
      "post": {
        "description": "Create new user with email & password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get current logged in user info",
        "responses": {
          "200": {
            "description": "Retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Edit current user info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User info updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete current user",
        "responses": {
          "204": {
            "description": "User deleted successfully"
          }
        }
      }
    },
    "/api/user/change-password": {
      "patch": {
        "description": "Change current user password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password changed successfully"
          }
        }
      }
    },
    "/api/user/unlink": {
      "patch": {
        "description": "Remove Google/Facebook from current account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "enum": [
                      "google",
                      "facebook"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Account unlinked successfully"
          }
        }
      }
    }
  },
  "tags": []
}